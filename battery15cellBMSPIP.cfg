[files]
pipport = '/dev/ttyUSB1'
bmsport = '/dev/ttyUSB0'
alarms = 'from alarmspip import Alarms'
logfile = '/home/pi/data/log'
summaryfile = '/home/pi/data/summary'
errfile = '/home/pi/data/baterrlog'
hoursummaryfile = '/home/pi/data/hoursummary'
daysummaryfile = '/home/pi/data/daysummary'
monthsummaryfile = '/home/pi/data/monthsummary'
yearsummaryfile = '/home/pi/data/yearsummary'

[battery]
name = 'Mikes'
numcells = 15
capacity = 220
overvoltage = 3.600
undervoltage = 2.900
ahloss = 0.10500000000000001
vreset = 51.5  # voltage to reset DOD counter
ireset = 5.0  # current to reset DOD counter
ilowcurrent = 10.0 # C/20 lowcurrent voltage logging current

[Interfaces]
pip = 'pip'
bms = 'bms'


[VoltageInputs]
v01 = 'self.bms.rawdat["V01"]'
v02 = 'self.bms.rawdat["V02"]'
v03 = 'self.bms.rawdat["V03"]'
v04 = 'self.bms.rawdat["V04"]'
v05 = 'self.bms.rawdat["V05"]'
v06 = 'self.bms.rawdat["V06"]'
v07 = 'self.bms.rawdat["V07"]'
v08 = 'self.bms.rawdat["V08"]'
v09 = 'self.bms.rawdat["V09"]'
v10 = 'self.bms.rawdat["V10"]'
v11 = 'self.bms.rawdat["V11"]'
v12 = 'self.bms.rawdat["V12"]'
v13 = 'self.bms.rawdat["V13"]'
v14 = 'self.bms.rawdat["V14"]'
v15 = 'self.bms.rawdat["V15"]'

[CurrentInputs]
iin1 = 'self.bms.rawdat["Ibat"]'
iin2 = 'self.pip.rawdat["PVI"]'
iin3 = 'self.current[0]+self.current[1]'
#iin3 = "self.bms.rawdat['Ibat']*0"

[sampling]
sampletime = 10
samplesav = 1

[calibrate]
currentgain = [-0.0192, -1.0, 1.0]
currentoffset = [-0.33, 0.0, 0.0]
batvgain = 1
measured = [0.0, 3.0, 6.0, 9.0, 12.0, 15.0, 18.0, 21.0, 24.0, 27.0, 30.0, 33.0, 36.0, 39.0, 42.0, 45.0]
displayed = [0.0, 3.0, 6.0, 9.0, 12.0, 15.0, 18.0, 21.0, 24.0, 27.0, 30.0, 33.0, 36.0, 39.0, 42.0, 45.0]
measureddelta = [ 0.0, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000]
displayeddelta = [ 0.0, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000]
delta = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]

[alarms]
# each alarm has five attributes, the first is the alarm initialisation code
# if the second attribute test is true the third attribute will be executed
# if the fourth attribute is true the fith attribute will be executed

alarm = ['pass', \
					'self.test=maxvolts>3.60 and not self.overvflg', \
					'self.setparam("PCVV50.3",replylen=7)\nself.overvflg=True', \
					'self.test=maxvolts<3.40 and self.overvflg', \
					'self.setparam("PCVV51.0",replylen=7)\nself.overvflg=False']
