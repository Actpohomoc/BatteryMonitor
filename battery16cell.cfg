# *****BATTERY LOGGER CONFIG FILE*****
# Copyright (C) 2014 Simon Richard Matthews
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

[files]
# logfile is location and name of file used for logging all data
logfile = '/dev/null'
# summaryfile is location and name of a summary of the data
summaryfile = 'summary'
# daysummaryfile is the location and name of daily summary file
daysummaryfile = '/dev/null'
# monthsummaryfile is the location and name of monthly summary file
monthsummaryfile = '/dev/null'
# yearsummaryfile is the location and name of yearly summary file
yearsummaryfile = '/dev/null'

[battery]
<<<<<<< HEAD:battery16cell.cfg
numcells = 16
capacity = 180
=======
numcells = 8
capacity = 360
ahloss = 0.1
>>>>>>> efbc3a1ade75d34e50686deb490b9684c6510eff:battery.cfg

[AtoDs]
atod0 = 'AtoD.ADS1x15(address=0x48,ic=0x01, debug=True)'
atod1 = 'AtoD.ADS1x15(address=0x49,ic=0x01, debug=True)'
atod2 = 'AtoD.ADS1x15(address=0x4A,ic=0x01, debug=True)'
atod3 = 'AtoD.ADS1x15(address=0x4B,ic=0x01, debug=True)'
# atod4 = 'AtoD.ADS1x15(address=0x48,ic=0x02, debug=True)'

[VoltageInputs]
v1 = 'atod0.readADCSingleEnded(channel=0, pga=2048, sps=250)'
v2 = 'atod0.readADCSingleEnded(channel=1, pga=2048, sps=250)'
v3 = 'atod0.readADCSingleEnded(channel=2, pga=2048, sps=250)'
v4 = 'atod0.readADCSingleEnded(channel=3, pga=2048, sps=250)'
v5 = 'atod1.readADCSingleEnded(channel=0, pga=2048, sps=250)'
v6 = 'atod1.readADCSingleEnded(channel=1, pga=2048, sps=250)'
v7 = 'atod1.readADCSingleEnded(channel=2, pga=2048, sps=250)'
v8 = 'atod1.readADCSingleEnded(channel=3, pga=2048, sps=250)'
v9 = 'atod2.readADCSingleEnded(channel=0, pga=2048, sps=250)'
v10 = 'atod2.readADCSingleEnded(channel=1, pga=2048, sps=250)'
v11 = 'atod2.readADCSingleEnded(channel=2, pga=2048, sps=250)'
v12 = 'atod2.readADCSingleEnded(channel=3, pga=2048, sps=250)'
v13 = 'atod3.readADCSingleEnded(channel=0, pga=2048, sps=250)'
v14 = 'atod3.readADCSingleEnded(channel=1, pga=2048, sps=250)'
v15 = 'atod3.readADCSingleEnded(channel=2, pga=2048, sps=250)'
v16 = 'atod3.readADCSingleEnded(channel=3, pga=2048, sps=250)'

[CurrentInputs]
<<<<<<< HEAD:battery16cell.cfg
# ibat = 'atod4.readADCDifferential(chP=0, chN=1, pga=256, sps=250)'
ibat = '0'
=======
ibat = 'atod2.readADCDifferential(chP=0, chN=1, pga=256, sps=250)'
iin = 'atod2.readADCDifferential(chP=2, chN=3, pga=256, sps=250)'
>>>>>>> efbc3a1ade75d34e50686deb490b9684c6510eff:battery.cfg

[sampling]
# sampletime is time between samples in seconds
sampletime = 1.002
# samplesav is number of samples in running average
samplesav = 10

[calibrate]
<<<<<<< HEAD:battery16cell.cfg
measured =  [0.0, 3.0, 6.0, 9.0, 12.0, 15.0, 18.0, 21.0, 24.0, 27.0, 30.0, 33.0, 36.0, 39.0, 42.0, 45.0, 48.0]
displayed = [0.0, 3.0, 6.0, 9.0, 12.0, 15.0, 18.0, 21.0, 24.0, 27.0, 30.0, 33.0, 36.0, 39.0, 42.0, 45.0, 48.0]

measureddelta =  [ 0.0, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000]
displayeddelta = [ 0.0, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000,  3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000, 3.000]
=======
# measured =  [0.0, 3.308, 6.609, 9.919, 13.230, 16.546, 19.864, 23.178, 26.498]
# displayed = [0.0, 3.273, 6.568, 9.830, 13.103, 16.432, 19.688, 23.054, 26.326]

# measureddelta =  [ 0.0, 3.310, 3.300, 3.308, 3.308, 3.312, 3.315, 3.318, 3.315]
# displayeddelta = [ 0.0, 3.313, 3.300, 3.311, 3.313, 3.319, 3.319, 3.316, 3.320]

measured =  [0.0, 3.320, 6.638, 9.958, 13.278, 16.599, 19.92, 23.242, 26.564]
displayed = [0.000, 3.283, 6.597, 9.872, 13.158, 16.497, 19.755, 23.138, 26.415]

measureddelta =  [ 0.0, 3.320, 3.318, 3.320, 3.320, 3.321, 3.321, 3.322, 3.322]
displayeddelta = [ 0.0, 3.318, 3.311, 3.315, 3.315, 3.316, 3.315, 3.320, 3.314]
>>>>>>> efbc3a1ade75d34e50686deb490b9684c6510eff:battery.cfg

[alarms]
# each alarm has five attributes, the first is the alarm initialisation code
# the second is the cell voltage below which the third attribute will be executed
# the forth is the voltage above which the fith attribute will be executed
# hvc = ['GPIO.setup("P8_10", GPIO.OUT)', 3.590, 'GPIO.output("P8_10", GPIO.LOW)', 3.600, 'GPIO.output("P8_10", GPIO.HIGH)']
# the forth is the voltage above which the forth attribute will be executed
# hvc = ['GPIO.setup("P8_10", GPIO.OUT)', 3.590, 'GPIO.output("P8_10", GPIO.HIGH)', 3.600, 'GPIO.output("P8_10", GPIO.LOW)']


